/**
 * Created by serne_000 on 22.12.2015.
 */
var name;
var deb=require('DEBUG').debug;

function debug(text){
    deb(text,name);
}
exports.getN=function(n){
    name=n;
};
var reader;
var sendMess;
var sendStick;
var games={};
exports.getStick=function(s){
    sendStick=s;
};
exports.getMess=function(m){
    sendMess=m;
};
var sendPhoto;
exports.getPhoto=function(m){
    sendPhoto=m;
};
exports.getR=function(r){
    reader=r;
};
function mainF(text,id){
    if(!!games[id]){
      //  console.log(id);
        var g=games[id];
        var kb=g.genKb();
       // console.log(kb);
        var o = {
            caption: 'I\'m bot!',
            //reply_to_message_id: id,
            reply_markup:JSON.stringify( {
                keyboard: kb
            })
        };
        sendMess(id, g.logDeck(),o);
    }else{
        reader(read(id),id);
    }
};
exports.mainF=mainF;
function read(id){
    var res={};
    sendMess(id,'Игрули то нет, надо создать(введи размеры поля(сначала высоту, потом ширину ну и количество бомб)');
    res.f=function(text){
        var words=text.split(' ');
        for(var i in words){
            if(words[i]===' ' || words[i]==='\n'){
                words.splice(i,1);
            }
        }
        var h=words[0];
        var w=words[1];
        var mC=words[2];
        var g=new game(h,w,mC,id);
        g.generateMap();
        games[id]=g;
        var r={};
        r.del=true;


        if(r.del){
            sendMess(id,'Игра успешно создана');
        }
        return r;
    };
    return res;
}

exports.info=function(){
    return 'Информация про сапёра';
};
module.exports.addF=function(){
    return {};
};
var sendPhoto;
exports.getPhoto=function(m){
    sendPhoto=m;
};


function game(h,w,mC,id){
    this.id=id;
    this.tC=0;
    this.n=h;
    this.map=new map(h,w);
    this.mC=mC;
}
function map(n,m){
    this.map=[];
    this.n=n;
    this.m=m||n;
    for(var i=0;i<this.n;i++){
        this.map[i]=[];
        for(var j=0;j<this.m;j++){
            this.map[i][j]=new cell(i,j);
        }
    }
}
function cell(y,x,bomb){
    this.x=x;
    this.y=y;
    this.bomb=bomb||false;
}
map.prototype.get=function(y,x){
    return this.map[y][x];
};
map.prototype.logDeck=function(){
    var res='';
    for(var i=0;i<this.n;i++){
        for(var j=0;j<this.m;j++){
            this.get(i,j).bomb?res+='⨂':res+='⨀';
        }
        res+='\n';
    }
    return res;
};
map.prototype.generateKb=function(){
   // console.log('map');
    var res=[];
    for(var i=0;i<this.n;i++){
        res[i]=[];
        for(var j=0;j<this.m;j++){
            this.get(i,j).bomb?res[i].push('⨂'):res[i].push('⨀');
        }
    }
  //  console.log(res);
    return res;
};
game.prototype.genKb=function(){
   // console.log('game');
    return this.map.generateKb();
};
game.prototype.logDeck=function(){
    return this.map.logDeck();
};
game.prototype.generateMap=function(y,x){
    return this.map.generateMap(this.mC,y,x);
};
map.prototype.placeBomb=function(y,x){
    this.get(y,x).bomb=true;
};
map.prototype.generateMap=function(mC,y,x){
    y=y||-1;
    x=x||-1;
    var validCells=[];
    for(var i=0;i<this.n;i++){
        for(var j=0;j<this.m;j++){
            if(i===y && j==x){

            }else{
                validCells.push(this.get(i,j));
            }
        }
    }

    var placeBombs=[];
    for(var i=0;i<mC;i++){
        var ind=Math.floor(Math.random()*validCells.length);
        placeBombs.push(validCells[ind]);
        for(var j=ind;j<validCells.length-1;j++){
            validCells[j]=validCells[j+1];
        }
        validCells.splice(validCells.length-1);
    }
    for(var i=0;i<placeBombs.length;i++){
        this.placeBomb(placeBombs[i].y,placeBombs[i].x);
    }
};





